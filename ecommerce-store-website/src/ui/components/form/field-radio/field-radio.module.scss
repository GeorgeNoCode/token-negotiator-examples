@use 'styles/modules' as *;


//
//	TokenScript / UI / Components / Form / Field Radio
//


.c-field-radio {
	$c: &;

	margin-bottom: 0;

	&-group {
		display: flex;
		flex-flow: row wrap;
		gap: grid-baseline(4.5);
		margin-bottom: grid-baseline(3);
	}

	&_error {
		flex: 1 1 100%;
		margin-top: grid-baseline(-4);
	}

	label {
		width: 100%;
		box-sizing: border-box;
		position: relative;
		display: inline-flex;
		flex-direction: row;
		align-items: center;
		background-color: color-get( --bg );
	}
		&_root {
			margin-right: grid-gutter(0.25);
			display: flex; flex: 0 0 auto; box-sizing: border-box;
			position: relative;
			background-position: center center;
			background-size: cover;
			transition: background-color 0.2s;

			&-ui {
				width: grid-baseline(3); height: grid-baseline(3);
				padding: 5px;
				display: flex; align-items: center; justify-content: center;
				position: relative; box-sizing: border-box;
				border: 2px solid color-get( --text-light );
				border-radius: 50%;

				&:before {
					content: '';
					box-sizing: border-box;
					position: absolute; top: -1px; right: -1px; bottom: -1px; left: -1px;
					border: 4px solid currentColor;
					border-radius: 50%;
					opacity: 0;
					transition: opacity 0.2s;
				}

				&:after {
					content: '';
					width: grid-baseline(1); height: grid-baseline(1);
					display: block;
					background-color: color-get( --brand-invert );
					border-radius: 50%;
					opacity: 0;
					transform: scale( 0.5 );
					transition: color 0.2s, opacity 0.2s, transform 0.2s;
				}
			}
		}
			input[type="radio"] {
				width: 100%; height: 100%;
				padding: 0; margin: 0;
				position: absolute; top: 0; left: 0;
				opacity: 0;

				&:disabled {
					pointer-events: none;
				}
			}

	//	States	 ----------------

	&:global(.-is-checked) {
		#{ $c }_root {
			&-ui {
				color: color-get( --brand );
				border-color: color-get( --brand );
				background-color: color-get( --brand );

				&:after {
					opacity: 1;
					transform: scale( 1 );
				}
			}
		}
	}
}

/**
 * 	Media Queries
 *	--------------------------------------------------
 */

 /** Breakpoint:	Small ----------------------- */

 @include breakpoint-for( small ) using ( $bp ) {

	.c-field-radio {
		$c: &;

		margin-right: grid-baseline(2);
		margin-bottom: grid-baseline(1);

		&-group {
			gap: inherit;
		}

		&_error {
			margin-top: grid-baseline(-0.25);
		}
	}
}
